import sklearn.cluster  as sc
import pandas as pa

from sklearn.preprocessing import StandardScaler


print("Imported")
#every class has a code (start lessons)
x = [('6L', '141924293a'), ('6G', '1518252838'), ('6H', '1519252a37'), ('6J', '1529152838'), ('3B', '1529291a19'), ('6E', '1818242935'), ('6B', '1818251835'), ('6A', '1818352935'), ('2j', '181915192a'), ('4J', '1819181918'), ('5H', '18191a193a'), ('3H', '182a151918'), ('1f', '182a15191a'), ('4B', '191818182a'), ('4E', '19182a2a39'), ('1a', '1919151819'), ('1h', '1919151819'), ('2d', '1919151919'), ('3C', '1919151919'), ('3E', '1919151919'), ('1j', '1919151919'), ('2e', '191915192a'), ('2h', '191915292a'), ('1b', '1919152a18'), ('5D', '191918182a'), ('4D', '1919181a29'), ('5K', '19191a1829'), ('4K', '19191a2939'), ('5C', '19193a1a29'), ('2n', '191a151a18'), ('2c', '1929151919'), ('3F', '1929151919'), ('3A', '1929152a18'), ('3G', '19292a151a'), ('2g', '192a151919'), ('2m', '192a152a19'), ('1e', '192a152a19'), ('1m', '192a152a19'), ('4C', '192a192a29'), ('5E', '1a19182919'), ('5B', '1a191a1819'), ('6C', '1a19zz1938'), ('1k', '1a2a15192a'), ('5T', '1a2a182a18'), ('6F', '2818151439'), ('6K', '2829251539'), ('6S', '28292b2918'), ('3D', '2919151929'), ('4A', '2919181818'), ('4G', '2919182a18'), ('5L', '29292a181a'), ('4H', '29292a2a19'), ('2a', '2a1815192a'), ('5G', '2a18181a19'), ('1c', '2a1915182a'), ('1d', '2a19151919'), ('1n', '2a19151919'), ('3J', '2a19152a18'), ('2k', '2a19152a19'), ('5J', '2a19191818'), ('5A', '2a192a1a2a'), ('2b', '2a1a151819'), ('5F', '2a29181a19'), ('5S', '2a291a1818'), ('4S', '2a291a1a29'), ('4T', '2a29281819'), ('1g', '2a2a15182a'), ('2f', '2a2a151919'), ('4F', '3a282a2a19'), ('6D', '3a39251439')]


Data = {
    "d00":[0],
    "d01":[0],
    "d10":[0],
    "d11":[0],
    "d20":[0],
    "d21":[0],
    "d30":[0],
    "d31":[0],
    "d40":[0],
    "d41":[0]
    }

scaler = StandardScaler()
scaler.fit(Data["d00"])

Data = scaler.transform(Data)

##TODO: Create Data from data with timetable
for k in x:
    for m in range(10):
        o = k[1][m]
        if o == "a":
            o = 10
        elif o == "b":
            o = 11
        elif o == "z":
            o = 100
        else:
            o = int(o)
        Data[sorted(list(Data.keys()))[m]].append(o)
        

df = pa.DataFrame(Data,columns=["d00","d01","d10","d11","d20","d21","d30","d31","d40","d41"])



kmeans = sc.KMeans(n_clusters=6).fit(df)

centroids = kmeans.cluster_centers_
